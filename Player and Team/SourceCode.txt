			PLAYER CLASS

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Player_and_Team
{
    public class Player
    {
		List<Player> Team = new List<Player>();
		private int _PlayerID;

		public int PlayerID
		{
			get { return _PlayerID; }
			set { _PlayerID = value; }
		}

		private string _name;

		public string PlayerName
		{
			get { return _name; }
			set { _name = value; }
		}
		private int _Age;

		public int Age
		{
			get { return _Age; }
			set { _Age = value; }
		}
		public Player()
		{
			Console.WriteLine("Default Constructor");
		}
		public  Player(int id , string name , int age)
		{
			this.PlayerID = id;
			this.PlayerName = name;
			this.Age = age;
		}
    }
}

			TEAM CLASS:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Player_and_Team
{
    public class Team
    {
        public  int PlayerCount = 0;
        List<Player> list = new List<Player>();
        
        public void AddPlayer()
        {
            if (PlayerCount < 11)
            {
                Player p = new Player();
                Console.WriteLine("Enter Player id");
                p.PlayerID = Int32.Parse(Console.ReadLine());
                Console.WriteLine("Enter Player Name :");
                p.PlayerName = Console.ReadLine();
                Console.WriteLine("Enter Player Age ");
                int age = Convert.ToInt32(Console.ReadLine());
                p.Age = age;
                this.list.Add(p);
                PlayerCount++;
            }
            else
            {
                Console.WriteLine("Team is Full...");
            }
        }
        public void AddPlayer(Player p)
        {
            if (PlayerCount < 11)
            {
                list.Add(p);
                PlayerCount++;
            }
            else
            {
                Console.WriteLine("Team is full...");
            }
        }
        public void Print()
        {
            foreach (var item in this.list)
            {
                Console.WriteLine($"Player ID : {item.PlayerID} Player Name: {item.PlayerName}");
            }
            Console.WriteLine("============================");
        }

        public void RemovePlayer(int id)
        {
            var found = this.list.Single(r => r.PlayerID == id);
            if(found != null)
            {
                this.list.Remove(found);
                PlayerCount--;
                Console.WriteLine($"Player {id} Removed Successfully....");
            }
            else
            {
                Console.WriteLine($"Player {id} Not Found");
            }
           // this.list.RemoveAll( rem => rem.PlayerID == id);
        }
        public void GetPlayer(int id)
        {
            var found = this.list.Find(fo => fo.PlayerID == id);
            if (found != null)
            {
                Console.WriteLine($"Player {id} Found");
                //foreach (var item in found)
                //{
                //    Console.WriteLine($"Player Id : {item.PlayerID} Player Name : {item.PlayerName} Age : {item.Age}");
                //}
                Console.WriteLine($"Player Id : {found.PlayerID} Player Name : {found.PlayerName} Age : {found.Age}");
            }
            else
            {
                Console.WriteLine($"Player {id} Not Found!!");
            }
        }
        public void GetPlayer(string name)
        {
            
            var found = this.list.Find(fo => fo.PlayerName == name);
            if (found != null)
            {
                Console.WriteLine($"Player {name} Found");
                //foreach (var item in found)
                //{

                //    Console.WriteLine($"Player Id : {item.PlayerID} Player Name : {item.PlayerName} Age : {item.Age}");
                //}
                Console.WriteLine($"Player Id : {found.PlayerID} Player Name : {found.PlayerName} Age : {found.Age}");
            }
            else
            {
                Console.WriteLine($"Player {name} Not Found!!");
            }
        }
    }
}


                PROGRAM.CS
                using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Player_and_Team
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Player p1 = new Player(1,"Anand",21);
            Player p2 = new Player(2,"Varun",22);
            Player p3 = new Player(3,"Nithya",22);
            Player p4 = new Player(4,"Kathija",30);
            Player p5 = new Player(5,"Kathija",30);
            Player p6 = new Player(6,"Kathija",30);
            Player p7 = new Player(7,"Kathija",30);
            Player p11 = new Player(8,"Kathija",30);
            Player p8 = new Player(9,"Kathija",30);
            Player p9 = new Player(10,"Kathija",30);
            Player p10 = new Player(11,"Kathija",30);
            Player p12 = new Player(12,"Kathija",30);
            Team Team1 = new Team();
            Team1.AddPlayer(p1);
            Team1.AddPlayer(p2);
            Team1.AddPlayer(p3);
            Team1.AddPlayer(p4);
            Team1.AddPlayer(p5);
            Team1.AddPlayer(p6);
            Team1.AddPlayer(p7);
            Team1.AddPlayer(p8);
            Team1.AddPlayer(p9);
            Team1.AddPlayer(p10);
            Team1.AddPlayer(p11);
           // Team1.AddPlayer(p11);
           //Team1.AddPlayer();
            Team1.GetPlayer(3);
            Team1.RemovePlayer(2);
            Team1.GetPlayer(2);
            Team1.AddPlayer();
            Team1.Print();

        }
    }
}


